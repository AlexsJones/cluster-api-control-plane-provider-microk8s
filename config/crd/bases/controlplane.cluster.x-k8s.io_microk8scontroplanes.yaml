---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: microk8scontroplanes.controlplane.cluster.x-k8s.io
spec:
  group: controlplane.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: MicroK8sControlPlane
    listKind: MicroK8sControlPlaneList
    plural: microk8scontroplanes
    shortNames:
    - mcp
    singular: microk8scontrolplane
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: TalosControlPlane API Server is ready to receive requests
      jsonPath: .status.ready
      name: Ready
      type: boolean
    - description: This denotes whether or not the control plane has the uploaded
        talos-config configmap
      jsonPath: .status.initialized
      name: Initialized
      type: boolean
    - description: Total number of non-terminated machines targeted by this control
        plane
      jsonPath: .status.replicas
      name: Replicas
      type: integer
    - description: Total number of fully running and ready control plane machines
      jsonPath: .status.readyReplicas
      name: Ready Replicas
      type: integer
    - description: Total number of unavailable machines targeted by this control plane
      jsonPath: .status.unavailableReplicas
      name: Unavailable Replicas
      type: integer
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: MicroK8sControlPlane is the Schema for the microk8scontrolplanes
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MicroK8sControlPlaneSpec defines the desired state of MicroK8sControlPlane
            properties:
              controlPlaneConfig:
                description: ControlPlaneConfig is a two TalosConfigSpecs to use for
                  initializing and joining machines to the control plane.
                properties:
                  controlplane:
                    description: MicroK8sConfigSpec defines the desired state of MicroK8sConfig
                    properties:
                      clusterConfiguration:
                        description: 'INSERT ADDITIONAL SPEC FIELDS - desired state
                          of cluster Important: Run "make" to regenerate code after
                          modifying this file InitConfiguration along with ClusterConfiguration
                          are the configurations necessary for the init command'
                        properties:
                          apiVersion:
                            description: 'APIVersion defines the versioned schema
                              of this representation of an object. Servers should
                              convert recognized schemas to the latest internal value,
                              and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                            type: string
                          kind:
                            description: 'Kind is a string value representing the
                              REST resource this object represents. Servers may infer
                              this from the endpoint the client submits requests to.
                              Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                        type: object
                      initConfiguration:
                        properties:
                          apiVersion:
                            description: 'APIVersion defines the versioned schema
                              of this representation of an object. Servers should
                              convert recognized schemas to the latest internal value,
                              and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                            type: string
                          bootstrapTokens:
                            description: BootstrapTokens is respected at `kubeadm
                              init` time and describes a set of Bootstrap Tokens to
                              create. This information IS NOT uploaded to the kubeadm
                              cluster configmap, partly because of its sensitive nature
                            items:
                              properties:
                                description:
                                  description: Description sets a human-friendly message
                                    why this token exists and what it's used for,
                                    so other administrators can know its purpose.
                                  type: string
                                expires:
                                  description: Expires specifies the timestamp when
                                    this token expires. Defaults to being set dynamically
                                    at runtime based on the TTL. Expires and TTL are
                                    mutually exclusive.
                                  format: date-time
                                  type: string
                                groups:
                                  description: Groups specifies the extra groups that
                                    this token will authenticate as when/if used for
                                    authentication
                                  items:
                                    type: string
                                  type: array
                                token:
                                  description: Token is used for establishing bidirectional
                                    trust between nodes and control-planes. Used for
                                    joining nodes in the cluster.
                                  type: string
                                ttl:
                                  description: TTL defines the time to live for this
                                    token. Defaults to 24h. Expires and TTL are mutually
                                    exclusive.
                                  type: string
                                usages:
                                  description: Usages describes the ways in which
                                    this token can be used. Can by default be used
                                    for establishing bidirectional trust, but that
                                    can be changed here.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - token
                              type: object
                            type: array
                          kind:
                            description: 'Kind is a string value representing the
                              REST resource this object represents. Servers may infer
                              this from the endpoint the client submits requests to.
                              Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          localAPIEndpoint:
                            properties:
                              host:
                                description: The hostname on which the API server
                                  is serving.
                                type: string
                              port:
                                description: The port on which the API server is serving.
                                format: int32
                                type: integer
                            required:
                            - host
                            - port
                            type: object
                        type: object
                      joinConfiguration:
                        description: Foo is an example field of MicroK8sConfig. Edit
                          microk8sconfig_types.go to remove/update
                        properties:
                          apiVersion:
                            description: 'APIVersion defines the versioned schema
                              of this representation of an object. Servers should
                              convert recognized schemas to the latest internal value,
                              and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                            type: string
                          kind:
                            description: 'Kind is a string value representing the
                              REST resource this object represents. Servers may infer
                              this from the endpoint the client submits requests to.
                              Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                        type: object
                    type: object
                  init:
                    description: 'Deprecated: starting from cacppt v0.4.0 provider
                      doesn''t use init configs.'
                    properties:
                      clusterConfiguration:
                        description: 'INSERT ADDITIONAL SPEC FIELDS - desired state
                          of cluster Important: Run "make" to regenerate code after
                          modifying this file InitConfiguration along with ClusterConfiguration
                          are the configurations necessary for the init command'
                        properties:
                          apiVersion:
                            description: 'APIVersion defines the versioned schema
                              of this representation of an object. Servers should
                              convert recognized schemas to the latest internal value,
                              and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                            type: string
                          kind:
                            description: 'Kind is a string value representing the
                              REST resource this object represents. Servers may infer
                              this from the endpoint the client submits requests to.
                              Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                        type: object
                      initConfiguration:
                        properties:
                          apiVersion:
                            description: 'APIVersion defines the versioned schema
                              of this representation of an object. Servers should
                              convert recognized schemas to the latest internal value,
                              and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                            type: string
                          bootstrapTokens:
                            description: BootstrapTokens is respected at `kubeadm
                              init` time and describes a set of Bootstrap Tokens to
                              create. This information IS NOT uploaded to the kubeadm
                              cluster configmap, partly because of its sensitive nature
                            items:
                              properties:
                                description:
                                  description: Description sets a human-friendly message
                                    why this token exists and what it's used for,
                                    so other administrators can know its purpose.
                                  type: string
                                expires:
                                  description: Expires specifies the timestamp when
                                    this token expires. Defaults to being set dynamically
                                    at runtime based on the TTL. Expires and TTL are
                                    mutually exclusive.
                                  format: date-time
                                  type: string
                                groups:
                                  description: Groups specifies the extra groups that
                                    this token will authenticate as when/if used for
                                    authentication
                                  items:
                                    type: string
                                  type: array
                                token:
                                  description: Token is used for establishing bidirectional
                                    trust between nodes and control-planes. Used for
                                    joining nodes in the cluster.
                                  type: string
                                ttl:
                                  description: TTL defines the time to live for this
                                    token. Defaults to 24h. Expires and TTL are mutually
                                    exclusive.
                                  type: string
                                usages:
                                  description: Usages describes the ways in which
                                    this token can be used. Can by default be used
                                    for establishing bidirectional trust, but that
                                    can be changed here.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - token
                              type: object
                            type: array
                          kind:
                            description: 'Kind is a string value representing the
                              REST resource this object represents. Servers may infer
                              this from the endpoint the client submits requests to.
                              Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          localAPIEndpoint:
                            properties:
                              host:
                                description: The hostname on which the API server
                                  is serving.
                                type: string
                              port:
                                description: The port on which the API server is serving.
                                format: int32
                                type: integer
                            required:
                            - host
                            - port
                            type: object
                        type: object
                      joinConfiguration:
                        description: Foo is an example field of MicroK8sConfig. Edit
                          microk8sconfig_types.go to remove/update
                        properties:
                          apiVersion:
                            description: 'APIVersion defines the versioned schema
                              of this representation of an object. Servers should
                              convert recognized schemas to the latest internal value,
                              and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                            type: string
                          kind:
                            description: 'Kind is a string value representing the
                              REST resource this object represents. Servers may infer
                              this from the endpoint the client submits requests to.
                              Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                        type: object
                    type: object
                required:
                - controlplane
                type: object
              infrastructureTemplate:
                description: InfrastructureTemplate is a required reference to a custom
                  resource offered by an infrastructure provider.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
              replicas:
                format: int32
                type: integer
              version:
                description: Version defines the desired Kubernetes version.
                minLength: 2
                pattern: ^v(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)([-0-9a-zA-Z_\.+]*)?$
                type: string
            required:
            - controlPlaneConfig
            - infrastructureTemplate
            type: object
          status:
            description: MicroK8sControlPlaneStatus defines the observed state of
              MicroK8sControlPlane
            properties:
              bootstrapped:
                description: Bootstrapped denotes whether any nodes received bootstrap
                  request which is required to start etcd and Kubernetes components
                  in Talos.
                type: boolean
              conditions:
                description: Conditions defines current service state of the KubeadmControlPlane.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              failureMessage:
                description: ErrorMessage indicates that there is a terminal problem
                  reconciling the state, and will be set to a descriptive error message.
                type: string
              failureReason:
                description: FailureReason indicates that there is a terminal problem
                  reconciling the state, and will be set to a token value suitable
                  for programmatic interpretation.
                type: string
              initialized:
                description: Initialized denotes whether or not the control plane
                  has the uploaded talos-config configmap.
                type: boolean
              observedGeneration:
                description: ObservedGeneration is the latest generation observed
                  by the controller.
                format: int64
                type: integer
              ready:
                description: Ready denotes that the TalosControlPlane API Server is
                  ready to receive requests.
                type: boolean
              readyReplicas:
                description: Total number of fully running and ready control plane
                  machines.
                format: int32
                type: integer
              replicas:
                description: Total number of non-terminated machines targeted by this
                  control plane (their labels match the selector).
                format: int32
                type: integer
              selector:
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                  of cluster Important: Run "make" to regenerate code after modifying
                  this file Selector is the label selector in string format to avoid
                  introspection by clients, and is used to provide the CRD-based integration
                  for the scale subresource and additional integrations for things
                  like kubectl describe.. The string will be in the same format as
                  the query-param syntax. More info about label selectors: http://kubernetes.io/docs/user-guide/labels#label-selectors'
                type: string
              unavailableReplicas:
                description: Total number of unavailable machines targeted by this
                  control plane. This is the total number of machines that are still
                  required for the deployment to have 100% available capacity. They
                  may either be machines that are running but not yet ready or machines
                  that still have not been created.
                format: int32
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      scale:
        labelSelectorPath: .status.selector
        specReplicasPath: .spec.replicas
        statusReplicasPath: .status.replicas
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
